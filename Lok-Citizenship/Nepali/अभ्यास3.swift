import SwiftUI

struct ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏3: View {
    @StateObject var quizLogic = Quiz‡§§‡§∞‡•ç‡§ï()
    @State private var selectedAnswer: Int? = nil
    @State private var showAnswerFeedback: Bool = false
    @State private var isAnswerCorrect: Bool = false
    
    @State private var showQuitConfirmation: Bool = false
    @Environment(\.presentationMode) var presentationMode
    @State private var isAnswered: Bool = false
    
    let questions: [BilingualQuestion] = [
        BilingualQuestion(
            englishText: "What do we call the first ten amendments to the Constitution?",
            nepaliText: "‡§∏‡§Ç‡§µ‡§ø‡§ß‡§æ‡§®‡§ï‡§æ ‡§™‡§π‡§ø‡§≤‡•ã ‡•ß‡•¶ ‡§∏‡§Ç‡§∂‡•ã‡§ß‡§®‡§π‡§∞‡•Ç‡§≤‡§æ‡§à ‡§ï‡•á ‡§≠‡§®‡§ø‡§®‡•ç‡§õ?",
            englishOptions: ["The Declaration of Independence", "The Bill of Rights", "The Articles of Confederation", "The Federalist Papers"],
            nepaliOptions: ["‡§∏‡•ç‡§µ‡§§‡§®‡•ç‡§§‡•ç‡§∞‡§§‡§æ‡§ï‡•ã ‡§ò‡•ã‡§∑‡§£‡§æ-‡§™‡§§‡•ç‡§∞ ", "‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞‡§ï‡•ã ‡§µ‡§ø‡§ß‡•á‡§Ø‡§ï", "‡§∏‡§Ç‡§ò‡•Ä‡§Ø ‡§Ö‡§®‡•Å‡§ö‡•ç‡§õ‡•á‡§¶", "‡§´‡•á‡§°‡•á‡§∞‡§≤‡§ø‡§∏‡•ç‡§ü ‡§™‡§§‡•ç‡§∞‡§π‡§∞‡•Ç"],
            correctAnswer: 1
        ),

        BilingualQuestion(
            englishText: "What is the capital of your state?",
            nepaliText: "‡§§‡§™‡§æ‡§à‡§Å‡§ï‡•ã ‡§∞‡§æ‡§ú‡•ç‡§Ø‡§ï‡•ã ‡§∞‡§æ‡§ú‡§ß‡§æ‡§®‡•Ä ‡§ï‡•á ‡§π‡•ã?",
            englishOptions: ["Depends on your state", "New York", "Los Angeles", "Chicago"],
            nepaliOptions: ["‡§§‡§™‡§æ‡§à‡§Å‡§ï‡•ã ‡§∞‡§æ‡§ú‡•ç‡§Ø‡§Æ‡§æ ‡§≠‡§∞ ‡§™‡§∞‡•ç‡§õ", "‡§®‡•ç‡§Ø‡•Ç‡§Ø‡•ã‡§∞‡•ç‡§ï", "‡§≤‡§∏ ‡§è‡§®‡•ç‡§ú‡§≤‡§∏", "‡§∂‡§ø‡§ï‡§æ‡§ó‡•ã"],
            correctAnswer: 0
        ),

        BilingualQuestion(
            englishText: "Who was the first President of the United States?",
            nepaliText: "‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ‡§ï‡§æ ‡§™‡§π‡§ø‡§≤‡•ã ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§ï‡•ã ‡§•‡§ø‡§è?",
            englishOptions: ["John Adams", "Thomas Jefferson", "George Washington", "Benjamin Franklin"],
            nepaliOptions: ["‡§ú‡•ã‡§π‡§® ‡§è‡§°‡§Æ‡•ç‡§∏", "‡§•‡•ã‡§Æ‡§∏ ‡§ú‡•á‡§´‡§∞‡§∏‡§®", "‡§ú‡§∞‡•ç‡§ú ‡§µ‡§æ‡§∂‡§ø‡§Ç‡§ó‡§ü‡§®", "‡§¨‡•á‡§Ç‡§ú‡§æ‡§Æ‡§ø‡§® ‡§´‡•ç‡§∞‡•ç‡§Ø‡§æ‡§ô‡•ç‡§ï‡§≤‡§ø‡§®"],
            correctAnswer: 2
        ),

        BilingualQuestion(
            englishText: "What did the Emancipation Proclamation do?",
            nepaliText: "‡§Æ‡•Å‡§ï‡•ç‡§§‡§ø ‡§ò‡•ã‡§∑‡§£‡§æ‡§≤‡•á ‡§ï‡•á ‡§ó‡§∞‡•ç‡§Ø‡•ã?",
            englishOptions: ["Ended the Civil War", "Freed the slaves", "Established a national bank", "Declared independence from Britain"],
            nepaliOptions: ["‡§ó‡•É‡§π‡§Ø‡•Å‡§¶‡•ç‡§ß ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§ ‡§ó‡§∞‡•ç‡§Ø‡•ã", "‡§¶‡§æ‡§∏‡§π‡§∞‡•Ç‡§≤‡§æ‡§à ‡§∏‡•ç‡§µ‡§§‡§®‡•ç‡§§‡•ç‡§∞ ‡§ó‡§∞‡•ç‡§Ø‡•ã", "‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§ø‡§Ø ‡§¨‡•à‡§Ç‡§ï ‡§∏‡•ç‡§•‡§æ‡§™‡§®‡§æ ‡§ó‡§∞‡•ç‡§Ø‡•ã", "‡§¨‡•á‡§≤‡§æ‡§Ø‡§§‡§¨‡§æ‡§ü ‡§∏‡•ç‡§µ‡§§‡§®‡•ç‡§§‡•ç‡§∞‡§§‡§æ ‡§ò‡•ã‡§∑‡§£‡§æ ‡§ó‡§∞‡•ç‡§Ø‡•ã"],
            correctAnswer: 1
        ),

        BilingualQuestion(
            englishText: "Who is the Speaker of the House of Representatives now?",
            nepaliText: "‡§π‡§æ‡§≤ ‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø ‡§∏‡§≠‡§æ‡§ï‡§æ ‡§∏‡§≠‡§æ‡§Æ‡•Å‡§ñ ‡§ï‡•ã ‡§π‡•Å‡§®‡•ç?",
            englishOptions: ["Nancy Pelosi", "Kevin McCarthy", "Mitch McConnell", "Mike Johnson"],
            nepaliOptions: ["‡§®‡•ç‡§Ø‡§æ‡§®‡•ç‡§∏‡•Ä ‡§™‡•á‡§≤‡•ã‡§∏‡•Ä", "‡§ï‡•á‡§≠‡§ø‡§® ‡§Æ‡•ç‡§Ø‡§æ‡§ï‡§æ‡§∞‡•ç‡§•‡•Ä", "‡§Æ‡§ø‡§ö ‡§Æ‡•ç‡§Ø‡§æ‡§ï‡§ï‡•ã‡§®‡•á‡§≤", "‡§Æ‡§æ‡§á‡§ï ‡§ú‡•ã‡§®‡•ç‡§∏‡§®"],
            correctAnswer: 3
        ),

        BilingualQuestion(
            englishText: "How many justices are on the Supreme Court?",
            nepaliText: "‡§∏‡§∞‡•ç‡§µ‡•ã‡§ö‡•ç‡§ö ‡§Ö‡§¶‡§æ‡§≤‡§§‡§Æ‡§æ ‡§ï‡§§‡§ø ‡§ú‡§®‡§æ ‡§®‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§ß‡•Ä‡§∂‡§π‡§∞‡•Ç ‡§õ‡§®‡•ç?",
            englishOptions: ["7", "9", "11", "13"],
            nepaliOptions: ["‡•≠", "‡•Ø", "‡•ß‡•ß", "‡•ß‡•©"],
            correctAnswer: 1
        ),

        BilingualQuestion(
            englishText: "What did Susan B. Anthony do?",
            nepaliText: "‡§∏‡•Å‡§∏‡§æ‡§® ‡§¨‡•Ä. ‡§è‡§®‡•ç‡§•‡•ã‡§®‡•Ä‡§≤‡•á ‡§ï‡•á ‡§ó‡§∞‡§ø‡§®‡•ç?",
            englishOptions: ["Fought for women's rights", "Wrote the Constitution", "Discovered America", "Became the first female President"],
            nepaliOptions: ["‡§Æ‡§π‡§ø‡§≤‡§æ‡§π‡§∞‡•Ç‡§ï‡§æ ‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞‡§ï‡§æ ‡§≤‡§æ‡§ó‡§ø ‡§≤‡§°‡§ø‡§®‡•ç", "‡§∏‡§Ç‡§µ‡§ø‡§ß‡§æ‡§® ‡§≤‡•á‡§ñ‡§ø‡§®‡•ç", "‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ ‡§™‡§§‡•ç‡§§‡§æ ‡§≤‡§ó‡§æ‡§á‡§®‡•ç", "‡§™‡§π‡§ø‡§≤‡•ã ‡§Æ‡§π‡§ø‡§≤‡§æ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§¨‡§®‡§ø‡§®‡•ç"],
            correctAnswer: 0
        ),

        BilingualQuestion(
            englishText: "What movement tried to end racial discrimination?",
            nepaliText: "‡§ï‡•Å‡§® ‡§Ü‡§®‡•ç‡§¶‡•ã‡§≤‡§®‡§≤‡•á ‡§ú‡§æ‡§§‡•Ä‡§Ø ‡§≠‡•á‡§¶‡§≠‡§æ‡§µ ‡§Ö‡§®‡•ç‡§§‡•ç‡§Ø ‡§ó‡§∞‡•ç‡§®‡•á ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ó‡§∞‡•ç‡§Ø‡•ã?",
            englishOptions: ["The Civil Rights Movement", "The Women's Movement", "The American Revolution", "The Abolitionist Movement"],
            nepaliOptions: ["‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞ ‡§Ü‡§®‡•ç‡§¶‡•ã‡§≤‡§®", "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§Ü‡§®‡•ç‡§¶‡•ã‡§≤‡§®", "‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡•Ä ‡§ï‡•ç‡§∞‡§æ‡§®‡•ç‡§§‡§ø", "‡§¶‡§æ‡§∏ ‡§â‡§®‡•ç‡§Æ‡•Ç‡§≤‡§® ‡§Ü‡§®‡•ç‡§¶‡•ã‡§≤‡§®"],
            correctAnswer: 0
        ),

        BilingualQuestion(
            englishText: "What was one important thing that Abraham Lincoln did?",
            nepaliText: "‡§Ö‡§¨‡•ç‡§∞‡§æ‡§π‡§Æ ‡§≤‡§ø‡§Ç‡§ï‡§®‡§≤‡•á ‡§ó‡§∞‡•á‡§ï‡•ã ‡§è‡§â‡§ü‡§æ ‡§Æ‡§π‡§§‡•ç‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡§æ‡§Æ ‡§ï‡•á ‡§π‡•ã?",
            englishOptions: ["Established the U.S. Navy", "Freed the slaves", "Fought in the Revolutionary War", "Wrote the Bill of Rights"],
            nepaliOptions: ["‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø‡§ï‡•ã ‡§®‡•å‡§∏‡•á‡§®‡§æ ‡§∏‡•ç‡§•‡§æ‡§™‡§®‡§æ ‡§ó‡§∞‡•á", "‡§¶‡§æ‡§∏‡§π‡§∞‡•Ç‡§≤‡§æ‡§à ‡§∏‡•ç‡§µ‡§§‡§®‡•ç‡§§‡•ç‡§∞ ‡§ó‡§∞‡§æ‡§è", "‡§ï‡•ç‡§∞‡§æ‡§®‡•ç‡§§‡§ø‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•Å‡§¶‡•ç‡§ß ‡§≤‡§°‡•á", "‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞‡§ï‡•ã ‡§µ‡§ø‡§ß‡•á‡§Ø‡§ï ‡§≤‡•á‡§ñ‡•á"],
            correctAnswer: 1
        ),

        BilingualQuestion(
            englishText: "Why does the U.S. flag have 50 stars?",
            nepaliText: "‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡•Ä ‡§ù‡§£‡•ç‡§°‡§æ‡§Æ‡§æ ‡•´‡•¶ ‡§µ‡§ü‡§æ ‡§§‡§æ‡§∞‡§æ ‡§ï‡§ø‡§® ‡§õ‡§®‡•ç?",
            englishOptions: ["For the 50 Presidents", "For the 50 states", "For the 50 amendments", "For the 50 years of independence"],
            nepaliOptions: ["‡•´‡•¶ ‡§ú‡§®‡§æ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø‡§π‡§∞‡•Ç‡§ï‡§æ ‡§≤‡§æ‡§ó‡§ø", "‡•´‡•¶ ‡§µ‡§ü‡§æ ‡§∞‡§æ‡§ú‡•ç‡§Ø‡§π‡§∞‡•Ç‡§ï‡§æ ‡§≤‡§æ‡§ó‡§ø", "‡•´‡•¶ ‡§µ‡§ü‡§æ ‡§∏‡§Ç‡§∂‡•ã‡§ß‡§®‡§π‡§∞‡•Ç‡§ï‡§æ ‡§≤‡§æ‡§ó‡§ø", "‡•´‡•¶ ‡§µ‡§∞‡•ç‡§∑‡§ï‡•ã ‡§∏‡•ç‡§µ‡§§‡§®‡•ç‡§§‡•ç‡§∞‡§§‡§æ‡§ï‡§æ ‡§≤‡§æ‡§ó‡§ø"],
            correctAnswer: 1
        ),

        BilingualQuestion(
            englishText: "When do we vote for President?",
            nepaliText: "‡§π‡§æ‡§Æ‡•Ä ‡§ï‡§π‡§ø‡§≤‡•á ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§Æ‡§§‡§¶‡§æ‡§® ‡§ó‡§∞‡•ç‡§õ‡•å‡§Ç?",
            englishOptions: ["January", "March", "November", "December"],
            nepaliOptions: ["‡§ú‡§®‡§µ‡§∞‡•Ä", "‡§Æ‡§æ‡§∞‡•ç‡§ö", "‡§®‡•ã‡§≠‡•á‡§Æ‡•ç‡§¨‡§∞", "‡§°‡§ø‡§∏‡•á‡§Æ‡•ç‡§¨‡§∞"],
            correctAnswer: 2
        ),

        BilingualQuestion(
            englishText: "What is one reason colonists came to America?",
            nepaliText: "‡§¨‡•á‡§≤‡§æ‡§Ø‡§§‡•Ä ‡§â‡§™‡§®‡§ø‡§µ‡•á‡§∂‡§π‡§∞‡•Ç ‡§ï‡§ø‡§® ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ ‡§Ü‡§è?",
            englishOptions: ["To escape taxes", "Religious freedom", "To join the military", "To find gold"],
            nepaliOptions: ["‡§ï‡§∞‡§¨‡§æ‡§ü ‡§¨‡§ö‡•ç‡§®", "‡§ß‡§æ‡§∞‡•ç‡§Æ‡§ø‡§ï ‡§∏‡•ç‡§µ‡§§‡§®‡•ç‡§§‡•ç‡§∞‡§§‡§æ", "‡§∏‡•á‡§®‡§æ‡§Æ‡§æ ‡§≠‡§∞‡•ç‡§§‡•Ä ‡§π‡•Å‡§®", "‡§∏‡•Å‡§® ‡§ñ‡•ã‡§ú‡•ç‡§®"],
            correctAnswer: 1
        ),

        BilingualQuestion(
            englishText: "Who wrote the Federalist Papers?",
            nepaliText: "‡§´‡•á‡§°‡•á‡§∞‡§≤‡§ø‡§∏‡•ç‡§ü ‡§™‡§§‡•ç‡§∞‡§π‡§∞‡•Ç ‡§ï‡§∏‡§≤‡•á ‡§≤‡•á‡§ñ‡•á?",
            englishOptions: ["Thomas Jefferson", "James Madison, Alexander Hamilton, John Jay", "George Washington", "Ben Franklin"],
            nepaliOptions: ["‡§•‡•ã‡§Æ‡§∏ ‡§ú‡•á‡§´‡§∞‡§∏‡§®", "‡§ú‡•á‡§Æ‡•ç‡§∏ ‡§Æ‡•ç‡§Ø‡§æ‡§°‡§ø‡§∏‡§®, ‡§è‡§≤‡•á‡§ï‡•ç‡§ú‡•á‡§®‡•ç‡§°‡§∞ ‡§π‡•ç‡§Ø‡§æ‡§Æ‡§ø‡§≤‡•ç‡§ü‡§®, ‡§ú‡•ã‡§® ‡§ú‡•á", "‡§ú‡§∞‡•ç‡§ú ‡§µ‡§æ‡§∂‡§ø‡§Ç‡§ó‡§ü‡§®", "‡§¨‡•á‡§® ‡§´‡•ç‡§∞‡•ç‡§Ø‡§æ‡§ô‡•ç‡§ï‡§≤‡§ø‡§®"],
            correctAnswer: 1
        ),

        BilingualQuestion(
            englishText: "Who was the President during World War I?",
            nepaliText: "‡§™‡•ç‡§∞‡§•‡§Æ ‡§µ‡§ø‡§∂‡•ç‡§µ‡§Ø‡•Å‡§¶‡•ç‡§ß‡§ï‡•ã ‡§∏‡§Æ‡§Ø‡§Æ‡§æ ‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ‡§ï‡§æ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§ï‡•ã ‡§•‡§ø‡§è?",
            englishOptions: ["Franklin D. Roosevelt", "Woodrow Wilson", "Harry Truman", "Dwight D. Eisenhower"],
            nepaliOptions: ["‡§´‡•ç‡§∞‡•ç‡§Ø‡§æ‡§ô‡•ç‡§ï‡§≤‡§ø‡§® ‡§°‡•Ä. ‡§∞‡•Ç‡§ú‡§µ‡•á‡§≤‡•ç‡§ü", "‡§µ‡•Å‡§°‡•ç‡§∞‡•ã ‡§µ‡§ø‡§≤‡•ç‡§∏‡§®", "‡§π‡•ç‡§Ø‡§æ‡§∞‡•Ä ‡§ü‡•ç‡§∞‡•Å‡§Æ‡•ç‡§Ø‡§æ‡§®", "‡§°‡•ç‡§µ‡§æ‡§á‡§ü ‡§°‡•Ä. ‡§Ü‡§á‡§ú‡§®‡§π‡§æ‡§µ‡§∞"],
            correctAnswer: 1
        ),

        BilingualQuestion(
            englishText: "What is one U.S. territory?",
            nepaliText: "‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ‡§ï‡•ã ‡§è‡§â‡§ü‡§æ ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§ï‡•Å‡§® ‡§π‡•ã?",
            englishOptions: ["Hawaii", "Puerto Rico", "Alaska", "Canada"],
            nepaliOptions: ["‡§π‡§µ‡§æ‡§à", "‡§™‡•ç‡§Ø‡•Å‡§∞‡•ç‡§ü‡•ã ‡§∞‡§ø‡§ï‡•ã", "‡§Ö‡§≤‡§æ‡§∏‡•ç‡§ï‡§æ", "‡§ï‡•ç‡§Ø‡§æ‡§®‡§°‡§æ"],
            correctAnswer: 1
        )
    ]

    
    var body: some View {
        ScrollView {
        VStack(spacing: 20) {
                HStack {
                    Button(action: { quizLogic.switchLanguage(to: .english) }) {
                        Text("üá∫üá∏ English")
                            .padding()
                            .background(quizLogic.selectedLanguage == .english ? Color.blue : Color.gray)
                            .foregroundColor(.white)
                            .cornerRadius(10)
                    }
                    Spacer()
                    
                    Button(action: { quizLogic.switchLanguage(to: .nepali) }) {
                        Text("üá≥üáµ ‡§®‡•á‡§™‡§æ‡§≤‡•Ä")
                            .padding()
                            .background(quizLogic.selectedLanguage == .nepali ? Color.blue : Color.gray)
                            .foregroundColor(.white)
                            .cornerRadius(10)
                    }
                }
                .padding()
                
                if quizLogic.showResult {
                    Text(quizLogic.selectedLanguage == .english ? "Quiz Completed!" : "‡§ï‡•ç‡§µ‡§ø‡§ú ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§ ‡§≠‡§Ø‡•ã!")
                        .font(.largeTitle)
                        .fontWeight(.bold)
                        .foregroundColor(.white)
                    Text(quizLogic.selectedLanguage == .english ? "Correct Answers: \(quizLogic.correctAnswers)" : "‡§∏‡§π‡•Ä ‡§â‡§§‡•ç‡§§‡§∞‡§π‡§∞‡•Ç: \(quizLogic.correctAnswers)")
                        .foregroundColor(.green)
                    Text(quizLogic.selectedLanguage == .english ? "Incorrect Answers: \(quizLogic.incorrectAnswers)" : "‡§ó‡§≤‡§§ ‡§â‡§§‡•ç‡§§‡§∞‡§π‡§∞‡•Ç: \(quizLogic.incorrectAnswers)")
                        .foregroundColor(.red)
                    
                    Button(quizLogic.selectedLanguage == .english ? "Restart Quiz" : "‡§™‡•Å‡§®: ‡§∏‡•Å‡§∞‡•Å ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç") {
                        quizLogic.startQuiz()
                        selectedAnswer = nil
                        showAnswerFeedback = false
                        isAnswered = false
                    }
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
                    
                } else {
                    Text("\(quizLogic.currentQuestionIndex + 1). \(quizLogic.selectedLanguage == .english ? quizLogic.currentQuestion.englishText : quizLogic.currentQuestion.nepaliText)")
                        .font(.title).bold()
                        .foregroundColor(.white)
                        .padding()
                        .padding(.bottom, 20)
                    
                    ForEach(0..<quizLogic.currentQuestion.englishOptions.count, id: \.self) { index in
                        Button(action: {
                            if !isAnswered {
                                selectedAnswer = index
                                isAnswerCorrect = quizLogic.answerQuestion(index)
                                showAnswerFeedback = true
                                isAnswered = true
                            }
                        }) {
                            Text(quizLogic.selectedLanguage == .english ?
                                 quizLogic.currentQuestion.englishOptions[index] :
                                    quizLogic.currentQuestion.nepaliOptions[index])
                            .foregroundColor(.white)
                            .padding()
                            .frame(maxWidth: .infinity, minHeight: 50)
                            .background(
                                isAnswered
                                ? (index == quizLogic.currentQuestion.correctAnswer ? Color.green : Color.red)
                                : Color.blue
                            )
                            .cornerRadius(10)
                        }
                        .disabled(isAnswered)
                    }
                    
                    if showAnswerFeedback {
                        Text(isAnswerCorrect ? "‚úÖ \(quizLogic.selectedLanguage == .english ? "Correct!" : "‡§∏‡§π‡•Ä!")‚úÖ" : "‚ùå \(quizLogic.selectedLanguage == .english ? "Wrong!" : "‡§ó‡§≤‡§§!")‚ùå")
                            .font(.headline)
                            .foregroundColor(isAnswerCorrect ? .green : .red)
                            .padding()
                        
                        Button(quizLogic.selectedLanguage == .english ? "Next Question" : "‡§Ö‡§∞‡•ç‡§ï‡•ã ‡§™‡•ç‡§∞‡§∂‡•ç‡§®") {
                            quizLogic.moveToNextQuestion()
                            showAnswerFeedback = false
                            selectedAnswer = nil
                            isAnswered = false
                        }
                        .padding()
                        .background(Color.orange)
                        .foregroundColor(.white)
                        .cornerRadius(10)
                        
                    } else {
                        HStack {
                            Button(action: {
                                quizLogic.previousQuestion()
                                selectedAnswer = nil
                                showAnswerFeedback = false
                                isAnswered = false
                            }) {
                                Text(quizLogic.selectedLanguage == .english ? "Previous" : "‡§Ö‡§ò‡§ø‡§≤‡•ç‡§≤‡•ã")
                                    .foregroundColor(.white)
                                    .padding()
                                    .background(Color.gray)
                                    .cornerRadius(10)
                            }
                            .disabled(quizLogic.currentQuestionIndex == 0)
                            
                            Spacer()
                            
                            Button(action: {
                                quizLogic.moveToNextQuestion()
                                selectedAnswer = nil
                                showAnswerFeedback = false
                                isAnswered = false
                            }) {
                                Text(quizLogic.selectedLanguage == .english ? "Skip" : "‡§õ‡•ã‡§°‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç")
                                    .foregroundColor(.white)
                                    .padding()
                                    .background(Color.orange)
                                    .cornerRadius(10)
                            }
                            .disabled(quizLogic.showResult)
                        }
                        .padding()
                    }
                }
            }
        }
            .navigationBarBackButtonHidden(true)
            .padding()
            .onAppear {
                quizLogic.questions = questions
                quizLogic.startQuiz()
            }
            .frame(maxWidth: .infinity, maxHeight: .infinity)
            .background(
                Image("USANepal")
                    .resizable()
                    .scaledToFill()
                    .ignoresSafeArea()
                    .overlay(Color.black.opacity(0.8))
            )
        
            .toolbar {
                ToolbarItem(placement: .principal) {
                    Text(quizLogic.selectedLanguage == .english ? "Practice 3" : "‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡•©")
                        .font(.title)
                        .fontWeight(.bold)
                        .foregroundColor(.green)
                    }
                }
        
            .navigationBarItems(trailing:
                Button(action: {
                    showQuitConfirmation = true
                }) {
                    Text(quizLogic.selectedLanguage == .english ? "Quit" : "‡§õ‡•ã‡§°‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç")
                        .foregroundColor(.red)
                        .font(.title)
                }
            )
            .alert(isPresented: $showQuitConfirmation) {
                Alert(
                    title: Text(quizLogic.selectedLanguage == .english ? "Quit Quiz?" : "‡§ï‡•ç‡§µ‡§ø‡§ú ‡§õ‡•ã‡§°‡•ç‡§®‡•Å‡§π‡•Å‡§®‡•ç‡§õ?"),
                    message: Text(quizLogic.selectedLanguage == .english ? "Are you sure you want to quit?" : "‡§ï‡•á ‡§§‡§™‡§æ‡§à‡§Å ‡§™‡§ï‡•ç‡§ï‡§æ ‡§õ‡•ã‡§°‡•ç‡§® ‡§ö‡§æ‡§π‡§®‡•Å‡§π‡•Å‡§®‡•ç‡§õ?"),
                    primaryButton: .destructive(Text(quizLogic.selectedLanguage == .english ? "Yes" : "‡§π‡•ã")) {
                        presentationMode.wrappedValue.dismiss()
                    },
                    secondaryButton: .cancel(Text(quizLogic.selectedLanguage == .english ? "No" : "‡§π‡•ã‡§á‡§®"))
                )
            }
        }
    }
