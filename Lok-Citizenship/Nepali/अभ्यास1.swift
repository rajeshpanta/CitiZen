import SwiftUI

struct ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏1: View {
    @StateObject var quizLogic = Quiz‡§§‡§∞‡•ç‡§ï() // ‚úÖ Using the new Quiz Logic
    @State private var selectedAnswer: Int? = nil
    @State private var showAnswerFeedback: Bool = false
    @State private var isAnswerCorrect: Bool = false
    
    @State private var showQuitConfirmation: Bool = false // ‚úÖ Quit confirmation pop-up
    @Environment(\.presentationMode) var presentationMode // ‚úÖ For navigation back
    @State private var isAnswered: Bool = false // ‚úÖ Prevents multiple answers
    
    
    let questions: [BilingualQuestion] = [
        BilingualQuestion(
            englishText: "What is the supreme law of the land?",
            nepaliText: "‡§¶‡•á‡§∂‡§ï‡•ã ‡§∏‡§∞‡•ç‡§µ‡•ã‡§ö‡•ç‡§ö ‡§ï‡§æ‡§®‡•Å‡§® ‡§ï‡•á ‡§π‡•ã?",
            englishOptions: ["The Bill of Rights", "The Declaration", "The Constitution", "The Articles"],
            nepaliOptions: ["‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞‡§ï‡•ã ‡§µ‡§ø‡§ß‡•á‡§Ø‡§ï", "‡§ò‡•ã‡§∑‡§£‡§æ", "‡§∏‡§Ç‡§µ‡§ø‡§ß‡§æ‡§®", "‡§≤‡•á‡§ñ‡§π‡§∞‡•Ç"],
            correctAnswer: 2
        ),
        
        BilingualQuestion(
            englishText: "Who makes federal laws?",
            nepaliText: "‡§∏‡§Ç‡§ò‡•Ä‡§Ø ‡§ï‡§æ‡§®‡•Ç‡§®‡§π‡§∞‡•Ç ‡§ï‡•ã ‡§¨‡§®‡§æ‡§â‡§Å‡§õ?",
            englishOptions: ["The President", "Congress", "The Supreme Court", "The Military"],
            nepaliOptions: ["‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø", "‡§ï‡§æ‡§Ç‡§ó‡•ç‡§∞‡•á‡§∏", "‡§∏‡§∞‡•ç‡§µ‡•ã‡§ö‡•ç‡§ö ‡§Ö‡§¶‡§æ‡§≤‡§§", "‡§∏‡•à‡§®‡•ç‡§Ø"],
            correctAnswer: 1
        ),
        
        BilingualQuestion(
            englishText: "What are the two parts of the U.S. Congress?",
            nepaliText: "‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡•Ä ‡§ï‡§æ‡§Å‡§ó‡•ç‡§∞‡•á‡§∏‡§ï‡§æ ‡§¶‡•Å‡§à ‡§≠‡§æ‡§ó‡§π‡§∞‡•Ç ‡§ï‡•Å‡§®-‡§ï‡•Å‡§® ‡§π‡•Å‡§®‡•ç?",
            englishOptions: ["The Senate & The House", "The House & The President", "The Senate & The Cabinet", "The Military & The President"],
            nepaliOptions: ["‡§∏‡•á‡§®‡•á‡§ü ‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø ‡§∏‡§≠‡§æ", "‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø ‡§∏‡§≠‡§æ ‡§∞ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø", "‡§∏‡•á‡§®‡•á‡§ü ‡§∞ ‡§Æ‡§®‡•ç‡§§‡•ç‡§∞‡§ø‡§™‡§∞‡§ø‡§∑‡§¶", "‡§∏‡•à‡§®‡•ç‡§Ø ‡§∞ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø"],
            correctAnswer: 0
        ),
        
        BilingualQuestion(
            englishText: "What is the capital of the United States?",
            nepaliText: "‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ‡§ï‡•ã ‡§∞‡§æ‡§ú‡§ß‡§æ‡§®‡•Ä ‡§ï‡•á ‡§π‡•ã?",
            englishOptions: ["New York", "Washington D.C.", "Los Angeles", "Chicago"],
            nepaliOptions: ["‡§®‡•ç‡§Ø‡•Ç‡§Ø‡•ã‡§∞‡•ç‡§ï", "‡§µ‡§æ‡§∂‡§ø‡§ô‡•ç‡§ü‡§® ‡§°‡•Ä.‡§∏‡•Ä.", "‡§≤‡§∏ ‡§è‡§®‡•ç‡§ú‡§≤‡§∏", "‡§∂‡§ø‡§ï‡§æ‡§ó‡•ã"],
            correctAnswer: 1
        ),
        
        BilingualQuestion(
            englishText: "What are the two major political parties?",
            nepaliText: "‡§¶‡•Å‡§à ‡§™‡•ç‡§∞‡§Æ‡•Å‡§ñ ‡§∞‡§æ‡§ú‡§®‡•Ä‡§§‡§ø‡§ï ‡§¶‡§≤‡§π‡§∞‡•Ç ‡§ï‡•Å‡§®-‡§ï‡•Å‡§® ‡§π‡•Å‡§®‡•ç?",
            englishOptions: ["Democrats & Libertarian", "Federalists & Republicans", "Libertarian & Tories", "Democrats & Republicans"],
            nepaliOptions: ["‡§°‡•á‡§Æ‡•ã‡§ï‡•ç‡§∞‡•ç‡§Ø‡§æ‡§ü‡•ç‡§∏ ‡§∞ ‡§≤‡§ø‡§¨‡§∞‡•ç‡§ü‡•á‡§∞‡§ø‡§Ø‡§®", "‡§´‡•á‡§°‡•á‡§∞‡§≤‡§ø‡§∏‡•ç‡§ü‡•ç‡§∏ ‡§∞ ‡§∞‡§ø‡§™‡§¨‡•ç‡§≤‡§ø‡§ï‡§®‡§π‡§∞‡•Ç", "‡§≤‡§ø‡§¨‡§∞‡•ç‡§ü‡•á‡§∞‡§ø‡§Ø‡§® ‡§∞ ‡§ü‡•ã‡§∞‡•Ä‡§π‡§∞‡•Ç", "‡§°‡•á‡§Æ‡•ã‡§ï‡•ç‡§∞‡•ç‡§Ø‡§æ‡§ü‡•ç‡§∏ ‡§∞ ‡§∞‡§ø‡§™‡§¨‡•ç‡§≤‡§ø‡§ï‡§®‡§π‡§∞‡•Ç"],
            correctAnswer: 3
        ),
        
        BilingualQuestion(
            englishText: "What color are the stars on the American flag?",
            nepaliText: "‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡•Ä ‡§ù‡§£‡•ç‡§°‡§æ‡§ï‡§æ ‡§§‡§æ‡§∞‡§æ‡§π‡§∞‡•Ç ‡§ï‡•Å‡§® ‡§∞‡§Ç‡§ó‡§ï‡§æ ‡§π‡•Å‡§®‡•ç‡§õ‡§®‡•ç?",
            englishOptions: ["Blue", "White", "Red", "Yellow"],
            nepaliOptions: ["‡§®‡•Ä‡§≤‡•ã", "‡§∏‡•á‡§§‡•ã", "‡§∞‡§æ‡§§‡•ã", "‡§™‡§π‡•á‡§Ç‡§≤‡•ã"],
            correctAnswer: 1
        ),
        
        BilingualQuestion(
            englishText: "How many states are there in the United States?",
            nepaliText: "‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ‡§Æ‡§æ ‡§ï‡§§‡§ø ‡§µ‡§ü‡§æ ‡§∞‡§æ‡§ú‡•ç‡§Ø‡§π‡§∞‡•Ç ‡§õ‡§®‡•ç?",
            englishOptions: ["51", "49", "52", "50"],
            nepaliOptions: ["‡•´‡•ß", "‡•™‡•Ø", "‡•´‡•®", "‡•´‡•¶"],
            correctAnswer: 3
        ),
        
        BilingualQuestion(
            englishText: "What is the name of the President of the United States?",
            nepaliText: "‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ‡§ï‡§æ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§ï‡•ã ‡§π‡•Å‡§®‡•ç?",
            englishOptions: ["Joe Biden", "George Bush", "Barack Obama", "Donald J. Trump"],
            nepaliOptions: ["‡§ú‡•ã ‡§¨‡§æ‡§á‡§°‡•á‡§®", "‡§ú‡§∞‡•ç‡§ú ‡§¨‡•Å‡§∂", "‡§¨‡§∞‡§æ‡§ï ‡§ì‡§¨‡§æ‡§Æ‡§æ", "‡§°‡•ã‡§®‡§æ‡§≤‡•ç‡§° ‡§ú‡•á. ‡§ü‡•ç‡§∞‡§Æ‡•ç‡§™"],
            correctAnswer: 3
        ),
        
        BilingualQuestion(
            englishText: "What is the name of the Vice President of the United States?",
            nepaliText: "‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ‡§ï‡§æ ‡§â‡§™‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø ‡§ï‡•ã ‡§π‡•Å‡§®‡•ç?",
            englishOptions: ["Kamala Harris", "Mike Pence", "Nancy Pelosi", "JD Vance"],
            nepaliOptions: ["‡§ï‡§Æ‡§≤‡§æ ‡§π‡•ç‡§Ø‡§æ‡§∞‡§ø‡§∏", "‡§Æ‡§æ‡§á‡§ï ‡§™‡•á‡§®‡•ç‡§∏", "‡§®‡•ç‡§Ø‡§æ‡§®‡•ç‡§∏‡•Ä ‡§™‡•á‡§≤‡•ã‡§∏‡•Ä", "‡§ú‡•á‡§°‡§ø ‡§≠‡•á‡§®‡•ç‡§∏"],
            correctAnswer: 3
        ),
        
        BilingualQuestion(
            englishText: "What is one right in the First Amendment?",
            nepaliText: "‡§™‡•ç‡§∞‡§•‡§Æ ‡§∏‡§Ç‡§∂‡•ã‡§ß‡§®‡§Æ‡§æ ‡§∞‡§π‡•á‡§ï‡•ã ‡§è‡§â‡§ü‡§æ ‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§π‡•ã?",
            englishOptions: ["Freedom to travel", "Right to vote", "Freedom of speech", "Right to education"],
            nepaliOptions: ["‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ó‡§∞‡•ç‡§®‡•á ‡§∏‡•ç‡§µ‡§§‡§®‡•ç‡§§‡•ç‡§∞‡§§‡§æ", "‡§Æ‡§§‡§¶‡§æ‡§® ‡§ó‡§∞‡•ç‡§®‡•á ‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞", "‡§¨‡•ã‡§≤‡•ç‡§®‡•á ‡§∏‡•ç‡§µ‡§§‡§®‡•ç‡§§‡•ç‡§∞‡§§‡§æ", "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ó‡§∞‡•ç‡§®‡•á ‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞"],
            correctAnswer: 2
        ),
        
        BilingualQuestion(
            englishText: "What do we celebrate on July 4th?",
            nepaliText: "‡§π‡§æ‡§Æ‡•Ä ‡§ú‡•Å‡§≤‡§æ‡§à ‡•™ ‡§Æ‡§æ ‡§ï‡•á ‡§Æ‡§®‡§æ‡§â‡§Å‡§õ‡•å‡§Ç?",
            englishOptions: ["Memorial Day", "Independence Day", "Labor Day", "Thanksgiving"],
            nepaliOptions: ["‡§∏‡•ç‡§Æ‡•É‡§§‡§ø ‡§¶‡§ø‡§µ‡§∏", "‡§∏‡•ç‡§µ‡§§‡§®‡•ç‡§§‡•ç‡§∞‡§§‡§æ ‡§¶‡§ø‡§µ‡§∏", "‡§∂‡•ç‡§∞‡§Æ ‡§¶‡§ø‡§µ‡§∏", "‡§ß‡§®‡•ç‡§Ø‡§¨‡§æ‡§¶ ‡§¶‡§ø‡§µ‡§∏"],
            correctAnswer: 1
        ),
        
        BilingualQuestion(
            englishText: "Who is the Commander in Chief of the military?",
            nepaliText: "‡§∏‡•à‡§®‡•ç‡§Ø ‡§™‡•ç‡§∞‡§Æ‡•Å‡§ñ ‡§ï‡§Æ‡§æ‡§£‡•ç‡§°‡§∞ ‡§ï‡•ã ‡§π‡•Å‡§®‡•ç?",
            englishOptions: ["The President", "The Vice President", "The Senate", "The Supreme Court"],
            nepaliOptions: ["‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø", "‡§â‡§™‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§§‡§ø", "‡§∏‡•á‡§®‡•á‡§ü", "‡§∏‡§∞‡•ç‡§µ‡•ã‡§ö‡•ç‡§ö ‡§Ö‡§¶‡§æ‡§≤‡§§"],
            correctAnswer: 0
        ),
        
        BilingualQuestion(
            englishText: "What is the name of the national anthem?",
            nepaliText: "‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§ø‡§Ø ‡§ó‡§æ‡§®‡§ï‡•ã ‡§®‡§æ‡§Æ ‡§ï‡•á ‡§π‡•ã?",
            englishOptions: ["This Land is Your Land", "God Bless America", "America the Beautiful", "The Star-Spangled Banner"],
            nepaliOptions: ["‡§Ø‡•ã ‡§≠‡•Ç‡§Æ‡§ø ‡§§‡§ø‡§Æ‡•Ä‡§π‡§∞‡•Ç‡§ï‡•ã ‡§π‡•ã", "‡§≠‡§ó‡§µ‡§æ‡§®‡§≤‡•á ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ ‡§∞‡§ï‡•ç‡§∑‡§æ ‡§ó‡§∞‡•Å‡§®", "‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ ‡§∏‡•Å‡§®‡•ç‡§¶‡§∞ ‡§õ", "‡§¶ ‡§∏‡•ç‡§ü‡§æ‡§∞ ‡§∏‡•ç‡§™‡•à‡§ô‡•ç‡§ó‡§≤‡•ç‡§° ‡§¨‡•ç‡§Ø‡§æ‡§®‡§∞"],
            correctAnswer: 3
        ),
        
        BilingualQuestion(
            englishText: "What do the 13 stripes on the U.S. flag represent?",
            nepaliText: "‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡•Ä ‡§ù‡§£‡•ç‡§°‡§æ‡§Æ‡§æ ‡§∞‡§π‡•á‡§ï‡§æ ‡•ß‡•© ‡§µ‡§ü‡§æ ‡§ß‡§∞‡•ç‡§∏‡§æ‡§π‡§∞‡•Ç ‡§ï‡•á ‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø‡§§‡•ç‡§µ ‡§ó‡§∞‡•ç‡§õ‡§®‡•ç?",
            englishOptions: ["The 13 amendments", "The number of wars", "The 13 states", "The original 13 colonies"],
            nepaliOptions: ["‡•ß‡•© ‡§µ‡§ü‡§æ ‡§∏‡§Ç‡§∂‡•ã‡§ß‡§®‡§π‡§∞‡•Ç", "‡§Ø‡•Å‡§¶‡•ç‡§ß‡§π‡§∞‡•Ç‡§ï‡•ã ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ", "‡•ß‡•© ‡§∞‡§æ‡§ú‡•ç‡§Ø‡§π‡§∞‡•Ç", "‡§Æ‡•å‡§≤‡§ø‡§ï ‡•ß‡•© ‡§â‡§™‡§®‡§ø‡§µ‡•á‡§∂‡§π‡§∞‡•Ç"],
            correctAnswer: 3
        ),
        
        BilingualQuestion(
            englishText: "What is the highest court in the United States?",
            nepaliText: "‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ‡§ï‡•ã ‡§∏‡§¨‡•à‡§≠‡§®‡•ç‡§¶‡§æ ‡§â‡§ö‡•ç‡§ö ‡§Ö‡§¶‡§æ‡§≤‡§§ ‡§ï‡•Å‡§® ‡§π‡•ã?",
            englishOptions: ["The Supreme Court", "The Federal Court", "The Court of Appeals", "The Civil Court"],
            nepaliOptions: ["‡§∏‡§∞‡•ç‡§µ‡•ã‡§ö‡•ç‡§ö ‡§Ö‡§¶‡§æ‡§≤‡§§", "‡§∏‡§Ç‡§ò‡•Ä‡§Ø ‡§Ö‡§¶‡§æ‡§≤‡§§", "‡§Ö‡§™‡§ø‡§≤ ‡§Ö‡§¶‡§æ‡§≤‡§§", "‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§Ö‡§¶‡§æ‡§≤‡§§"],
            correctAnswer: 0
        )
    ]
    
    
    var body: some View {
        ScrollView { // ‚úÖ Enables scrolling
            VStack(spacing: 20) {
                // ‚úÖ Language Selection Toggle
                HStack {
                    Button(action: { quizLogic.switchLanguage(to: .english) }) {
                        Text("üá∫üá∏ English")
                            .padding()
                            .background(quizLogic.selectedLanguage == .english ? Color.blue : Color.gray)
                            .foregroundColor(.white)
                            .cornerRadius(10)
                    }
                    Spacer()
                    
                    Button(action: { quizLogic.switchLanguage(to: .nepali) }) {
                        Text("üá≥üáµ ‡§®‡•á‡§™‡§æ‡§≤‡•Ä")
                            .padding()
                            .background(quizLogic.selectedLanguage == .nepali ? Color.blue : Color.gray)
                            .foregroundColor(.white)
                            .cornerRadius(10)
                    }
                }
                .padding()
                
                if quizLogic.showResult {
                    // ‚úÖ Quiz Completion View
                    Text(quizLogic.selectedLanguage == .english ? "Quiz Completed!" : "‡§ï‡•ç‡§µ‡§ø‡§ú ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§ ‡§≠‡§Ø‡•ã!")
                        .font(.largeTitle)
                        .fontWeight(.bold)
                        .foregroundColor(.white)
                    Text(quizLogic.selectedLanguage == .english ? "Correct Answers: \(quizLogic.correctAnswers)" : "‡§∏‡§π‡•Ä ‡§â‡§§‡•ç‡§§‡§∞‡§π‡§∞‡•Ç: \(quizLogic.correctAnswers)")
                        .foregroundColor(.green)
                    Text(quizLogic.selectedLanguage == .english ? "Incorrect Answers: \(quizLogic.incorrectAnswers)" : "‡§ó‡§≤‡§§ ‡§â‡§§‡•ç‡§§‡§∞‡§π‡§∞‡•Ç: \(quizLogic.incorrectAnswers)")
                        .foregroundColor(.red)
                    
                    Button(quizLogic.selectedLanguage == .english ? "Restart Quiz" : "‡§™‡•Å‡§®: ‡§∏‡•Å‡§∞‡•Å ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç") {
                        quizLogic.startQuiz() // ‚úÖ Reset & shuffle quiz
                        selectedAnswer = nil
                        showAnswerFeedback = false
                        isAnswered = false
                    }
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
                    
                } else {
                    // ‚úÖ Current Question View
                    Text("\(quizLogic.currentQuestionIndex + 1). \(quizLogic.selectedLanguage == .english ? quizLogic.currentQuestion.englishText : quizLogic.currentQuestion.nepaliText)")
                        .font(.title).bold()
                        .foregroundColor(.white)
                        .padding()
                        .padding(.bottom, 20)
                    
                    // ‚úÖ Show options based on selected language
                    ForEach(0..<quizLogic.currentQuestion.englishOptions.count, id: \.self) { index in
                        Button(action: {
                            if !isAnswered { // ‚úÖ Prevent multiple answers
                                selectedAnswer = index
                                isAnswerCorrect = quizLogic.answerQuestion(index)
                                showAnswerFeedback = true
                                isAnswered = true // ‚úÖ Locks the answer after first attempt
                            }
                        }) {
                            Text(quizLogic.selectedLanguage == .english ?
                                 quizLogic.currentQuestion.englishOptions[index] :
                                    quizLogic.currentQuestion.nepaliOptions[index]) // ‚úÖ Show correct language
                            .foregroundColor(.white)
                            .padding()
                            .frame(maxWidth: .infinity, minHeight: 50)
                            .background(
                                isAnswered
                                ? (index == quizLogic.currentQuestion.correctAnswer ? Color.green : Color.red) // ‚úÖ Lock color after answer
                                : Color.blue
                            )
                            .cornerRadius(10)
                        }
                        .disabled(isAnswered) // ‚úÖ Disable button after first selection
                    }
                    
                    if showAnswerFeedback {
                        // ‚úÖ Answer Feedback View
                        Text(isAnswerCorrect ? "‚úÖ \(quizLogic.selectedLanguage == .english ? "Correct!" : "‡§∏‡§π‡•Ä!")" : "‚ùå \(quizLogic.selectedLanguage == .english ? "Wrong!" : "‡§ó‡§≤‡§§!")")
                            .font(.headline)
                            .foregroundColor(isAnswerCorrect ? .green : .red)
                            .padding()
                        
                        Button(quizLogic.selectedLanguage == .english ? "Next Question" : "‡§Ö‡§∞‡•ç‡§ï‡•ã ‡§™‡•ç‡§∞‡§∂‡•ç‡§®") {
                            quizLogic.moveToNextQuestion()
                            showAnswerFeedback = false
                            selectedAnswer = nil
                            isAnswered = false // ‚úÖ Reset for new question
                        }
                        .padding()
                        .background(Color.orange)
                        .foregroundColor(.white)
                        .cornerRadius(10)
                        
                    } else {
                        // ‚úÖ Previous, Skip, and Next Buttons
                        HStack {
                            // Previous Question Button
                            Button(action: {
                                quizLogic.previousQuestion()
                                selectedAnswer = nil
                                showAnswerFeedback = false
                                isAnswered = false
                            }) {
                                Text(quizLogic.selectedLanguage == .english ? "Previous" : "‡§Ö‡§ò‡§ø‡§≤‡•ç‡§≤‡•ã")
                                    .foregroundColor(.white)
                                    .padding()
                                    .background(Color.gray)
                                    .cornerRadius(10)
                            }
                            .disabled(quizLogic.currentQuestionIndex == 0)
                            
                            Spacer()
                            
                            // Skip Question Button
                            Button(action: {
                                quizLogic.moveToNextQuestion()
                                selectedAnswer = nil
                                showAnswerFeedback = false
                                isAnswered = false
                            }) {
                                Text(quizLogic.selectedLanguage == .english ? "Skip" : "‡§õ‡•ã‡§°‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç")
                                    .foregroundColor(.white)
                                    .padding()
                                    .background(Color.orange)
                                    .cornerRadius(10)
                            }
                            .disabled(quizLogic.showResult) // ‚úÖ Prevent skipping if quiz is done
                        }
                        
                        .padding()
                    }
                    
                }
            }
        }
            .navigationBarBackButtonHidden(true) // ‚úÖ Disables the back button
            .padding()
            .onAppear {
                quizLogic.questions = questions // ‚úÖ Ensure questions are assigned first
                quizLogic.startQuiz() // ‚úÖ Now shuffle and reset
            }
            .frame(maxWidth: .infinity, maxHeight: .infinity) // ‚úÖ Full-screen coverage
            .background(
                Image("USANepal") // ‚úÖ Background image for bilingual quiz
                    .resizable()
                    .scaledToFill()
                    .ignoresSafeArea()
                    .overlay(Color.black.opacity(0.8))
            )
        
            .toolbar {
                ToolbarItem(placement: .principal) { // ‚úÖ Dynamic Title Based on Language
                    Text(quizLogic.selectedLanguage == .english ? "Practice 1" : "‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡•ß")
                        .font(.title)
                        .fontWeight(.bold)
                        .foregroundColor(.green)
                    }
                }
            .navigationBarItems(trailing:
            Button(action: {
                showQuitConfirmation = true // ‚úÖ Show confirmation pop-up
            }) {
                Text(quizLogic.selectedLanguage == .english ? "Quit" : "‡§õ‡•ã‡§°‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç")
                    .foregroundColor(.red)
                    .font(.title)
            }
            )
            // ‚úÖ Quit Confirmation Alert
            .alert(isPresented: $showQuitConfirmation) {
                Alert(
                    title: Text(quizLogic.selectedLanguage == .english ? "Quit Quiz?" : "‡§ï‡•ç‡§µ‡§ø‡§ú ‡§õ‡•ã‡§°‡•ç‡§®‡•Å‡§π‡•Å‡§®‡•ç‡§õ?"),
                    message: Text(quizLogic.selectedLanguage == .english ? "Are you sure you want to quit?" : "‡§ï‡•á ‡§§‡§™‡§æ‡§à‡§Å ‡§™‡§ï‡•ç‡§ï‡§æ ‡§õ‡•ã‡§°‡•ç‡§® ‡§ö‡§æ‡§π‡§®‡•Å‡§π‡•Å‡§®‡•ç‡§õ?"),
                    primaryButton: .destructive(Text(quizLogic.selectedLanguage == .english ? "Yes" : "‡§π‡•ã")) {
                        presentationMode.wrappedValue.dismiss() // ‚úÖ Navigate back to PracticeSelection
                    },
                    secondaryButton: .cancel(Text(quizLogic.selectedLanguage == .english ? "No" : "‡§π‡•ã‡§á‡§®")) // ‚úÖ Resume quiz
                )
            }
        }
    }
